import { useState } from "react";
import Head from 'next/head'
// Form Validation
import { useFormik } from "formik";
import * as Yup from 'yup';
// Component
import Navbar from "../component/customer/Navbar";
import Footer from "../component/customer/Footer";
// Auth service
import AuthService from "../services/auth.service";

export default function Register() {

  const [loading, setLoading] = useState(false);

  const validationSchema = Yup.object().shape({
    nama: Yup.string().required("Nama Tidak Boleh Kosong"),
    email: Yup.string().required("Email Tidak Boleh Kosong").email("Format Email Tidak Valid"),
    password: Yup.string().required("Password Tidak Boleh Kosong"),
    passwordConfirm: Yup.string()
     .oneOf([Yup.ref('password'), null], 'Password Harus Sama')
  });

  const formik = useFormik({
    initialValues: {
      nama: "",
      email: "",
      password: "",
      passwordConfirm: ""
    },
    validationSchema,
    validateOnChange: true,
    validateOnBlur: true,
    onSubmit: async (data) => {
      setLoading(true);
      console.log(data)

      // AuthService.register(data.nama, data.email, data.password)
      //   .then((response)=>{
      //     console.log(response.data)
      //     setLoading(false);
      //   })
      //   .catch((error)=>{
      //     setLoading(false);
      //     console.log(error)
      //   })

    },
  });

  return (

    <>
      <Head>
        <title>Registrasi</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar/>

      <div className="container">
        <h1 className="text-center mt-5">Registrasi</h1>

        <form className="row row-cols-1 justify-content-center my-5 pb-4" onSubmit={formik.handleSubmit} >
          <div className="mb-3 col-9 col-md-4">
            <div className="form-floating">
              <input 
                type="text" 
                className={`form-control ${formik.errors.nama ? "is-invalid" : ""}`} 
                name="nama" 
                placeholder="Nama"
                onChange={formik.handleChange}
                value={formik.values.nama}
              />
              <label forhtml="nama">Nama Pengguna</label>
            </div>
            <div className="text-danger">
              {formik.errors.nama ? formik.errors.nama : null}
            </div>
          </div>

          <div className="w-100"></div>

          <div className="mb-3 col-9 col-md-4">
            <div className="form-floating">
              <input 
                type="text" 
                className={`form-control ${formik.errors.email ? "is-invalid" : ""}`} 
                name="email"  
                placeholder="Email"
                onChange={formik.handleChange}
                value={formik.values.email}
              />
              <label forhtml="email">Email</label>
            </div>
            <div className="text-danger">
              {formik.errors.email ? formik.errors.email : null}
            </div>
          </div>

          <div className="w-100"></div>

          <div className="mb-3 col-9 col-md-4">
            <div className="form-floating">
              <input 
                type="password"
                className={`form-control ${formik.errors.password ? "is-invalid" : ""}`}
                name="password"
                placeholder="password"
                onChange={formik.handleChange}
                value={formik.values.password}
              />
              <label forhtml="password">Password</label>
            </div>
            <div className="text-danger">
              {formik.errors.password ? formik.errors.password : null}
            </div>
          </div>

          <div className="w-100"></div>

          <div className="mb-3 col-9 col-md-4">
            <div className="form-floating">
              <input 
                type="password" 
                className={`form-control ${formik.errors.passwordConfirm ? "is-invalid" : ""}`} 
                name="passwordConfirm"  
                placeholder="passwordConfirm"
                onChange={formik.handleChange}
                value={formik.values.passwordConfirm}
              />
              <label forhtml="passwordConfirm">Konfirmasi Password</label>
            </div>
            <div className="text-danger">
              {formik.errors.passwordConfirm ? formik.errors.passwordConfirm : null}
            </div>
          </div>

          <div className="w-100"></div>
          
          <div className="col-9 col-md-4">
            <div className="d-grid">
              <button type="submit" className="btn btn-lg btn-primary" disabled={loading}>
                {loading && (
                  <span className="spinner-border spinner-border-sm"></span>
                )}
                Daftar
              </button>
            </div>
          </div>

        </form>
      </div>

      <Footer/>
    </>
  )
}
